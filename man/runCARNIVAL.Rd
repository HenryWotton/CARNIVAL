% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_run_carnival.R
\name{runCARNIVAL}
\alias{runCARNIVAL}
\title{\code{runCARNIVAL}}
\usage{
runCARNIVAL(
  inputObj = NULL,
  measObj = measObj,
  netObj = netObj,
  weightObj = NULL,
  solverPath = NULL,
  solver = c("lpSolve", "cplex", "cbc"),
  timelimit = 3600,
  mipGAP = 0.05,
  poolrelGAP = 0.0001,
  limitPop = 500,
  poolCap = 100,
  poolIntensity = 4,
  poolReplace = 2,
  alphaWeight = 1,
  betaWeight = 0.2,
  threads = 0,
  cplexMemoryLimit = 8192,
  cleanTmpFiles = TRUE,
  dir_name = NULL
)
}
\arguments{
\item{perturbations}{vector of targets of perturbation - optional
or default set to NULL to run invCARNIVAL when inputs are not known.}

\item{measurements}{vector of the measurements (i.e. DoRothEA normalised
enrichment scores) - always required.}

\item{priorKnowledgeNetwork}{data frame of the prior knowledge network - always required.}

\item{pathwayWeights}{vector of the additional weight (i.e. PROGENy pathway
score or measured protein activities) - optional or default set as NULL to run
CARNIVAL without weights.}
}
\value{
The function will return a list of results containing:
1. weightedSIF: A table with 4 columns containing the combined network
solutions from CARNIVAL. It contains the Source of the interaction (Node1),
Sign of the interaction (Sign), the Target of the interaction (Node2) and the
weight of the interaction (Weight) which shows how often an interaction
appears across all solutions.

2. nodesAttributes: A table with 6 columns containing information about
infered protein activity states and attributes. It contains the Protein IDs
(Node); how often this node has taken an activity of 0, 1 and -1 across the
solutions (ZeroAct, UpAct, DownAct); the average activities across solutions
(AvgAct); and the node attribute (measured, target, inferred).

3. sifAll: A list of separate network solutions.

4. attributesAll: A list of separate inferred node activities in each
solution.

5. diagnostics: reports the convergence of optimization and reason of 
the termination. Only for CPLEX solver.
}
\description{
\code{runCARNIVAL}
}
\details{
Run CARNIVAL pipeline using to the user-provided list of inputs or
run CARNIVAL built-in examples. The function is an API from v1.2 of CARNIVAL 
and is left for backward compatibility.
}
\examples{
load(file = system.file("toy_perturbations_ex1.RData",
                        package="CARNIVAL"))
load(file = system.file("toy_measurements_ex1.RData",
                        package="CARNIVAL"))
load(file = system.file("toy_network_ex1.RData",
                        package="CARNIVAL"))

## lpSolve
res1 = runCarnival(perturbations = toy_inputs_ex1, 
                   measurements = toy_measurements_ex1,
                   priorKnowledgeNetwork = toy_network_ex1)

## cbc
res2 = runCarnival(perturbations = toy_inputs_ex1, 
                   measurements = toy_measurements_ex1,
                   priorKnowledgeNetwork = toy_network_ex1, 
                   solver = supportedSolvers$cbc)

## cplex
res3 = runCarnival(perturbations = toy_inputs_ex1, 
                   measurements = toy_measurements_ex1,
                   priorKnowledgeNetwork = toy_network_ex1, 
                   solver = supportedSolver$cplex,
                   solverPath = "your_path/")

}
\author{
Enio Gjerga, 2020 \email{carnival.developers@gmail.com}
}
